function tileType(e,t){return t?tileVegetationTypeFromSteepness[e]:e}function heatmap(e,t,i,s,r){for(var n=0,a=0,l=0;r>l;l++){var o=Math.pow(2,l);n+=i.noise2D(e/s*o,t/s*o)/o,a+=1/o}return n/a}function Terrain(e){this.humanity=e,this.plans={}}var SimplexNoise=require("simplex-noise"),MersenneTwister=require("./mersenne-twister"),prng=new MersenneTwister(0),simplex1=new SimplexNoise(prng.random.bind(prng)),simplex2=new SimplexNoise(prng.random.bind(prng)),factor=50,tileTypes={water:0,steppe:1,hill:2,mountain:3,swamp:4,meadow:5,forest:6,taiga:7,farm:8,residence:9,skyscraper:10,factory:11,dock:12,airland:13,airport:14,gunsmith:15,road:16,wall:17,blackdeath:18,metal:19,lumber:20,mine:21,industry:22,citrus:23,university:24,beach:25,arsenal:26,smoke:27,impact:28,curvedRoad:29,whales:30,pearls:31,fish:32,algae:33,glass:34,salt:35,cattle:36,poultry:37,ivory:38,limestone:39,wool:40,wine:41,fur:42,pigments:43,rubber:44,coal:45,crocodile:46,petroleum:47,shrimp:48,clay:49,spices:50,cotton:51,coffee:52,tea:53,resin:54,cocoa:55,honey:56,silk:57,ruby:58,gems:59,pelt:60,amber:61,field:62,market:63},buildingTypes=[8,9,10,11,12,13,14,15,16,17,20,21,22,24,26,62,63],resourceTypes={stock:-1,production:-2,wealth:-3},listOfResourceTypes=[resourceTypes.stock,resourceTypes.production,resourceTypes.wealth],tileVegetationTypeFromSteepness=[];tileVegetationTypeFromSteepness[tileTypes.water]=tileTypes.swamp,tileVegetationTypeFromSteepness[tileTypes.steppe]=tileTypes.meadow,tileVegetationTypeFromSteepness[tileTypes.hill]=tileTypes.forest,tileVegetationTypeFromSteepness[tileTypes.mountain]=tileTypes.taiga;var distances=[];distances[tileTypes.water]=2989,distances[tileTypes.steppe]=2,distances[tileTypes.hill]=4,distances[tileTypes.mountain]=16,distances[tileTypes.swamp]=8,distances[tileTypes.meadow]=3,distances[tileTypes.forest]=8,distances[tileTypes.taiga]=24,distances[tileTypes.road]=1,distances[tileTypes.wall]=32;var normalWater=distances[tileTypes.water],normalSwamp=distances[tileTypes.swamp],MAX_INT=9007199254740992,manufacture={boat:1,car:2,plane:4,artillery:8,gun:16},buildingDependencies=[,,,,,,,,,[[2,tileTypes.farm]],[[6,tileTypes.residence]],[[3,tileTypes.residence],[2,tileTypes.road]],[[1,tileTypes.residence],[1,tileTypes.water],[1,resourceTypes.stock]],[[2,tileTypes.road]],[[1,tileTypes.gunsmith],[3,tileTypes.airland],[1,resourceTypes.stock]],[[1,tileTypes.skyscraper],[1,tileTypes.factory]],,,,,[[1,tileTypes.residence]],[[1,resourceTypes.stock],[1,tileTypes.factory]],[[10,resourceTypes.wealth],[1,tileTypes.mine],[5,tileTypes.road]],,[[1,tileTypes.meadow],[1,tileTypes.water],[2,tileTypes.residence]],,[[1,tileTypes.gunsmith],[1,resourceTypes.production]],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,[],[[1,tileTypes.dock],[1,tileTypes.skyscraper],[4,resourceTypes.production]]],buildingTileDependency=[,,,,,,,,,,,,,,,,,,,,[tileTypes.forest,tileTypes.taiga],[tileTypes.metal],,,,,[tileTypes.steppe]],planTypes={move:1,build:2};Terrain.prototype={humanity:null,centerTile:{q:0,r:0},centerPoint:{x:0,y:0},tileTypes:tileTypes,buildingTypes:buildingTypes,resourceTypes:resourceTypes,listOfResourceTypes:listOfResourceTypes,tileType:tileType,heatmap:heatmap,setCenterTile:function(e){this.centerTile=e,this.centerPoint.x=Math.sqrt(3)*(e.q+e.r/2)|0,this.centerPoint.y=1.5*e.r},continent:function(e,t){var i=512,s=heatmap(e,t,simplex1,i,8),r=this.centerPoint,n=(e-r.x)*(e-r.x)+(t-r.y)*(t-r.y),a=heatmap(e,t,simplex1,4*i,8),l=+(s+.7)*Math.exp(-n/(i*i));return a>l&&(l=a),l=Math.min(1,l)},continentLimit:.42,tile:function e(t){var i,s;void 0===t.x?(i=Math.sqrt(3)*(t.q+t.r/2)|0,s=1.5*t.r):(i=t.x,s=t.y);var r=simplex2.noise2D(s/500,i/500),n=1-Math.abs((4*simplex1.noise2D(i/4/factor,s/4/factor)+2*simplex1.noise2D(i/2/factor,s/2/factor)+1*simplex1.noise2D(i/1/factor,s/1/factor)+.5*simplex1.noise2D(2*i/factor,2*s/factor))/7.5),a=Math.sin(-(5*r)*Math.abs(simplex1.noise2D(.25*i/factor,.25*s/factor))+simplex1.noise2D(i/factor,s/factor)-.5*simplex1.noise2D(2*i/factor,2*s/factor)+.25*simplex1.noise2D(4*i/factor,4*s/factor)-1/8*simplex1.noise2D(8*i/factor,8*s/factor)+1/16*simplex1.noise2D(16*i/factor,16*s/factor)),l=-simplex2.noise2D(s/factor/8,i/factor/8)+simplex2.noise2D(s/factor/4,i/factor/4)+a/2,o=r*simplex2.noise2D(i/factor,s/factor)+.5*simplex2.noise2D(2*i/factor,2*s/factor)+.25*simplex2.noise2D(4*i/factor,4*s/factor)+1/8*simplex2.noise2D(8*i/factor,8*s/factor)+1/16*simplex2.noise2D(16*i/factor,16*s/factor),p=a-n,c=this.continent(i,s);if(c>this.continentLimit)var u,y=-1.3,m=(a>.6?!1:n>.98)||-1>3*l/4+a/4?(u=(-1.5-y)/(this.continentLimit-1),p=c*u+y-u,tileTypes.water):-1>o?tileTypes.hill:-.2>p?tileTypes.steppe:.2>p?tileTypes.hill:tileTypes.mountain,h=o-(m===tileTypes.water?2*l:0)+Math.abs(a+.15)<0;else{var m=tileTypes.water,h=!1,T=c-1.92;p=T}var e={steepness:m,vegetation:h,type:this.tileType(m,h),height:p,rain:-o/2};return e},commodity:function(e,t){var i,s=e.q,r=e.r,n=(-simplex1.noise2D(s/60,r/60)/8+1)/2,a=(simplex1.noise2D(s/60,r/60)/8+1)/2,l=(-simplex2.noise2D(s/60,r/60)/8+1)/2,o=(simplex2.noise2D(s/60,r/60)/8+1)/2,p=n*simplex1.noise2D(s/4,r/4),c=a*simplex1.noise2D(s/16,r/16),u=l*simplex2.noise2D(s/2,r/2),y=o*simplex2.noise2D(s/8,r/8);if(p>.49)i=0;else if(c>.49)i=1;else if(u>.45)i=2;else{if(!(y>.45))return-1;i=3}var m;return m=null!=t?t.type:this.tile(e).type,tileTypes.whales+(m<<2)+i},distances:distances,distance:function(e){var t=this.tile(e),i=this.humanity.tile(e),s=distances[i&&i.b?i.b:t.type];return void 0===s&&(s=distances[t.type]),s},distanceBetweenTiles:function(e,t){return(Math.abs(e.q-t.q)+Math.abs(e.r-t.r)+Math.abs(e.q+e.r-t.q-t.r))/2},neighborFromTile:function(e,t){return 0===t?{q:e.q+1,r:e.r}:1===t?{q:e.q+1,r:e.r-1}:2===t?{q:e.q,r:e.r-1}:3===t?{q:e.q-1,r:e.r}:4===t?{q:e.q-1,r:e.r+1}:5===t?{q:e.q,r:e.r+1}:void 0},keyFromTile:function(e){return e.q+":"+e.r},tileFromKey:function(e){var t=e.split(":");return{q:0|t[0],r:0|t[1]}},manufacture:manufacture,manufactureFromBuilding:function(e){return e===tileTypes.dock?manufacture.boat:e===tileTypes.factory?manufacture.car:e===tileTypes.airport?manufacture.plane:e===tileTypes.gunsmith?manufacture.gun:null},speedFromHuman:function(e){return 0!==(e.o&manufacture.plane)?32:0!==(e.o&manufacture.car)?16:8},travelFrom:function(e,t){var i=this.humanity.tile(e).c,s={},r=this.keyFromTile(e);s[r]=null;var n={};n[r]=0;var a=[];for(a.push(r);a.length>0;){r=a.shift();var l=this.humanity.tile(this.tileFromKey(r));if(!l||null==l.c||l.c===i)for(var o=0;6>o;o++){var p=this.neighborFromTile(this.tileFromKey(r),o),c=n[r]+this.distance(p);if(t>=c){var u=this.keyFromTile(p);if(void 0!==n[u]&&c<n[u]&&delete n[u],void 0===n[u]&&void 0===s[u]){n[u]=c,s[u]=r;for(var y=-1,m=0;m<a.length;m++)if(void 0!==n[a[m]]){if(n[u]<=n[a[m]]){y=m;break}}else a.splice(m,1),m--;-1===y?a.push(u):a.splice(y,0,u)}}}}return s},travelTo:function(e,t,i,s,r,n){null==r&&(r=MAX_INT),null==n&&(n=this.humanity.tile(e));var a=n.c,l=this.keyFromTile(t),o={},p={},c={},u=[],y={},m=this.keyFromTile(e);for(y[m]=null,p[m]=0,u.push(m);u.length>0&&l!==m;){m=u.shift(),o[m]=!0;var h=this.humanity.tile(this.tileFromKey(m));if(!h||null==h.c||h.c===a)for(var T=0;6>T;T++){var f=this.neighborFromTile(this.tileFromKey(m),T),d=this.distance(f);if(!(d>i)){if(0>=r)return null;r--;var v=p[m]+d;if(!(s&&v>i)){var g=this.keyFromTile(f);if(void 0!==p[g]&&v<p[g]&&delete p[g],void 0===p[g]&&void 0===o[g]){p[g]=v,c[g]=v+(Math.abs(t.q-f.q)+Math.abs(t.r-f.r)+Math.abs(t.q+t.r-f.q-f.r))/2;for(var b=-1,w=0;w<u.length;w++)if(void 0!==c[u[w]]){if(c[g]<=c[u[w]]){b=w;break}}else u.splice(w,1),w--;-1===b?u.push(g):u.splice(b,0,g),y[g]=m}}}}}return l!==m?null:{endKey:l,parents:y,costs:p}},pathFromParents:function(e,t){var i=[];if(null==t[e])return[];for(;null!==t[e];)i.push(e),e=t[e];return i.push(e),i.reverse()},setDistancesForHuman:function(e){0!==(e.o&manufacture.boat)?(this.distances[tileTypes.water]=1,this.distances[tileTypes.swamp]=1):0!==(e.o&manufacture.plane)&&(this.distances[tileTypes.water]=2,this.distances[tileTypes.swamp]=2)},unsetDistancesForHuman:function(){this.distances[tileTypes.water]=normalWater,this.distances[tileTypes.swamp]=normalSwamp},humanTravelFrom:function(e){var t=this.humanity.tile(e);if(!t||t.h<=0)return{};this.setDistancesForHuman(t);var i=this.travelFrom(e,this.speedFromHuman(t));return this.unsetDistancesForHuman(t),i},humanTravelTo:function(e,t,i,s,r){if(null==r&&(r=this.humanity.tile(e)),!r||r.h<=0)return null;this.setDistancesForHuman(r);var n=this.travelTo(e,t,this.speedFromHuman(r),i,s,r);return this.unsetDistancesForHuman(r),n},humanTravelPath:function(e,t){var i=this.humanTravelTo(e,t);return null==i?[]:this.pathFromParents(i.endKey,i.parents)},humanTravelSpeedPath:function(e,t){var i=this.humanTravelTo(e,t,!0);return null==i?[]:this.pathFromParents(i.endKey,i.parents)},buildingDependencies:buildingDependencies,buildingTileDependency:buildingTileDependency,validConstruction:function(e,t,i){if(null==e)return!0;var s=this.humanity.tile(t),r=this.tile(t),n=i.stock-i.usedStock,a=i.production-i.usedProduction,l=i.wealth-i.usedWealth;if(!s||s.h<=0)return!1;if(e===tileTypes.field)return this.commodity(t,r)>=0;if(r.type===tileTypes.water&&(e===tileTypes.farm||e===tileTypes.residence||e===tileTypes.skyscraper||e===tileTypes.factory||e===tileTypes.airland||e===tileTypes.airport||e===tileTypes.gunsmith))return!1;if(void 0!==buildingTileDependency[e]){for(var o=!1,p=0;p<buildingTileDependency[e].length;p++)(buildingTileDependency[e][p]===r.type||buildingTileDependency[e][p]===s.b)&&(o=!0);if(!o)return!1}if(void 0!==buildingDependencies[e]){for(var c=buildingDependencies[e],u=new Array(c.length),p=0;p<u.length;p++)u[p]=0;for(var p=0;6>p;p++)for(var y=this.neighborFromTile(t,p),m=this.humanity.tile(y),h=this.tile(y),T=0;T<c.length;T++)if(c[T][1]>=0&&m&&m.b===c[T][1]||h.type===c[T][1])u[T]++;else if(c[T][1]<0){if(c[T][1]===resourceTypes.stock&&n<c[T][0])return!1;if(c[T][1]===resourceTypes.production&&a<c[T][0])return!1;if(c[T][1]===resourceTypes.wealth&&l<c[T][0])return!1;u[T]=c[T][0]}for(var T=0;T<u.length;T++)if(u[T]<c[T][0])return!1;return!0}return!0},planTypes:planTypes,plans:{},addPlan:function(e){plans[e.at]=e},eachPlan:function(e){for(var t in plans)e(plans[t])},clearPlans:function(){plans={}}},module.exports=Terrain;